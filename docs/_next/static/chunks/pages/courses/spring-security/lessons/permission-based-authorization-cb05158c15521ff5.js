(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[625],{2621:function(a,b,c){(window.__NEXT_P=window.__NEXT_P||[]).push(["/courses/spring-security/lessons/permission-based-authorization",function(){return c(2427)}])},476:function(d,b,a){"use strict";var e=a(7568),c=a(4051),f=a.n(c),g=a(5893),h=a(637),i=a(7294),j=a(1896);b.Z=function(a){var l,b=a.fileName,m=a.href,c=a.language,d=void 0===c?"java":c,n=a.children,k=(0,i.useState)(!1),o=k[0],q=k[1],p=(l=(0,e.Z)(f().mark(function a(){return f().wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,navigator.clipboard.writeText(n);case 2:q(!0),setTimeout(function(){return q(!1)},6e3);case 4:case"end":return a.stop()}},a)})),function(){return l.apply(this,arguments)});return(0,g.jsxs)("div",{className:"border rounded fs-6 my-4",children:[b&&(0,g.jsxs)("div",{className:"p-3 bg-light border-bottom",children:[(0,g.jsx)("span",{className:"font-monospace",children:(0,g.jsx)("a",{href:m,target:"_blank",children:b})}),(0,g.jsx)("span",{className:"float-end cursor-pointer","data-bs-toggle":"tooltip","data-bs-title":"Copy code",onClick:p,children:(0,g.jsx)("i",{className:"bi-clipboard"})})]}),(0,g.jsx)("pre",{className:"m-0 px-3 pb-3",children:(0,g.jsx)("code",{className:"language-".concat(d),children:(0,g.jsx)("span",{dangerouslySetInnerHTML:{__html:h.Z.highlight(n,{language:d}).value}})})}),o&&(0,g.jsx)(j.Z,{children:"Code copied to clipboard"})]})}},9963:function(d,b,a){"use strict";a.d(b,{aC:function(){return h},k8:function(){return i},nL:function(){return g}});var e=a(5893),c=a(4046),f=a.n(c);function g(a){var b=a.children;return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)("h1",{className:"display-5 mt-2 mb-2",children:b}),(0,e.jsx)("p",{className:f().underline})]})}function h(a){var b=a.children;return(0,e.jsx)("h3",{className:"fw-light mt-5 mb-2",children:b})}function i(a){var b=a.children;return(0,e.jsx)("h4",{className:"fw-light mt-5 mb-2",children:b})}},4621:function(c,a,b){"use strict";var d=b(5893);a.Z=function(a){var c=a.src,b=a.title;return(0,d.jsxs)("div",{className:"p-3",children:[(0,d.jsx)("div",{className:"mb-3 text-secondary text-center",children:(0,d.jsx)("em",{children:b})}),(0,d.jsx)("img",{className:"img-fluid rounded border shadow",src:c,alt:b})]})}},7291:function(d,b,a){"use strict";var e=a(5893),c=a(9472),f=a.n(c);b.Z=function(a){var b=a.children;return(0,e.jsx)("mark",{className:"font-monospace border rounded p-1 ".concat(f().mark),children:b})}},9927:function(b,a){"use strict";a.Z={title:"Spring Security",path:"/courses/spring-security",contextPath:"courses/spring-security/lessons/",githubPath:"https://github.com/SankaranarayananMurugan/spring-security-for-developers/tree/",lessons:[{title:"Introduction",path:"introduction",part:"I. Bootstrap The Application"},{title:"Install Spring Security",path:"install-spring-security",part:"I. Bootstrap The Application"},{title:"Enable Basic Auth",path:"enable-basic-auth",part:"I. Bootstrap The Application"},{title:"Authentication with AppUser",path:"appuser-authentication",part:"I. Bootstrap The Application"},{title:"Password Encoder",path:"password-encoder",part:"I. Bootstrap The Application"},{title:"Permit Public APIs",path:"permit-public-apis",part:"II. Web Layer Security - Role Based Authorization"},{title:"Role Based Authorization",path:"role-based-authorization",part:"II. Web Layer Security - Role Based Authorization"},{title:"Disable CSRF",path:"disable-csrf",part:"II. Web Layer Security - Role Based Authorization"},{title:"Current Authenticated User",path:"current-authenticated-user",part:"II. Web Layer Security - Role Based Authorization"},{title:"Permission Based Authorization",path:"permission-based-authorization",part:"III. Web Layer Security - Permission Based Authorization"},{title:"Define Permissions",path:"define-permissions",part:"III. Web Layer Security - Permission Based Authorization"},{title:"Assign Permissions",path:"assign-permissions",part:"III. Web Layer Security - Permission Based Authorization"},{title:"Remove Role Based Access",path:"remove-role-based-access",part:"III. Web Layer Security - Permission Based Authorization"},{title:"PreAuthorize",path:"pre-authorize",part:"IV. Service Layer Security"},{title:"PostAuthorize",path:"post-authorize",part:"IV. Service Layer Security"},{title:"Authorize Using Spring Beans",path:"authorize-using-spring-beans",part:"IV. Service Layer Security"},{title:"Domain Object Instance Security",path:"domain-object-instance-security",part:"V. Domain Object Instance Security"},{title:"PermissionEvaluator Interface",path:"permission-evaluator-interface",part:"V. Domain Object Instance Security"},{title:"PermissionEvaluator Strategy",path:"permission-evaluator-strategy",part:"V. Domain Object Instance Security"},{title:"DB Backed UserDetailsService",path:"db-backed-userdetailsservice",part:"V. Domain Object Instance Security"},{title:"Basic Authentication Revisited",path:"basic-authentication-revisited",part:"VI. Token Based Authentication"},{title:"Generate Token",path:"generate-token",part:"VI. Token Based Authentication"},{title:"Persist Token",path:"persist-token",part:"VI. Token Based Authentication"},{title:"Verify Token",path:"verify-token",part:"VI. Token Based Authentication"},{title:"Invalidate Token",path:"invalidate-token",part:"VI. Token Based Authentication"},{title:"JSON Web Token",path:"json-web-token",part:"VII. Token Based Authentication and Authorization"},{title:"Generate JWT",path:"generate-jwt",part:"VII. Token Based Authentication and Authorization"},{title:"Verify JWT",path:"verify-jwt",part:"VII. Token Based Authentication and Authorization"}]}},2427:function(f,b,a){"use strict";a.r(b);var g=a(5893),h=a(9963),i=a(130),j=a(7291),k=a(476);a(4621);var c=a(9827),d=a(9927),e=a(358);b.default=(0,c.default)(function(a){return a.githubPath,(0,g.jsxs)(g.Fragment,{children:[(0,g.jsxs)("section",{children:[(0,g.jsx)(h.nL,{children:"Permission Based Authorization"}),(0,g.jsx)(i.Z,{children:"We are yet to implement access restrictions to the below three APIs in order to meet the Security objectives defined in the first chapter."}),(0,g.jsxs)("table",{className:"table table-striped mb-4",children:[(0,g.jsx)("thead",{children:(0,g.jsxs)("tr",{children:[(0,g.jsx)("th",{children:"API"}),(0,g.jsx)("th",{children:"Objective"})]})}),(0,g.jsxs)("tbody",{children:[(0,g.jsxs)("tr",{children:[(0,g.jsx)("td",{children:"Update Course"}),(0,g.jsx)("td",{children:"Instructor who created the course can only update it."})]}),(0,g.jsxs)("tr",{children:[(0,g.jsx)("td",{children:"Play Course"}),(0,g.jsxs)("td",{children:["Instructor who created the course can only play it.",(0,g.jsx)("br",{}),"Students who are enrolled on the course can only play it."]})]}),(0,g.jsxs)("tr",{children:[(0,g.jsx)("td",{children:"View User Profile"}),(0,g.jsxs)("td",{children:["Users can only view their profile.",(0,g.jsx)("br",{}),"Any user can view an Instructor's profile."]})]})]})]})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Downside of Role-based access control"}),(0,g.jsxs)(i.Z,{children:["We can apply role-based restrictions using ",(0,g.jsx)(j.Z,{children:"hasRole()"})," or ",(0,g.jsx)(j.Z,{children:"hasAnyRole()"})," on the above API urls. But role-based access control is abstract, coarse grained and less flexible. Any software requirement change in terms of API access control will require code change in the ",(0,g.jsx)(j.Z,{children:"HttpSecurity"})," configuration."]}),(0,g.jsxs)(i.Z,{children:["For example, if the Students can view the list of instructors in order to get the list of courses filtered by the selected instructor, we have to relax the access control to ",(0,g.jsx)("u",{children:"ListInstructors"})," API for both Admin and Student users as below:"]}),(0,g.jsx)(k.Z,{children:"\nhttp\n    .csrf().disable()\n    .authorizeRequests(auth -> auth\n            .antMatchers(GET, PUBLIC_API_LIST).permitAll()\n            .antMatchers(API_LIST_STUDENTS).hasRole(ADMIN.name())\n            .antMatchers(API_LIST_INSTRUCTORS).hasAnyRole(ADMIN.name(), STUDENT.name())\n            .antMatchers(POST, API_CREATE_COURSES).hasRole(INSTRUCTOR.name())\n            .anyRequest().authenticated()\n    )\n    .httpBasic();\n"}),(0,g.jsx)(i.Z,{children:"So we need a way to define and modify access control dynamically with out changing the code. We can do this by adding another logical layer using Permissions on top of Roles."})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Permissions"}),(0,g.jsxs)(i.Z,{children:["Permission grants the ability to perform an action on a resource. By defining permissions for each action on each resource we can create fine grained access control. In technical terms we can define permissions for each API and then assign them to the appropriate Roles in the database. Similar to ",(0,g.jsx)(j.Z,{children:"hasRole()"})," Spring Security provides ",(0,g.jsx)(j.Z,{children:"hasAuthority()"})," method to restrict access to the API urls using these permissions."]}),(0,g.jsxs)(i.Z,{children:["So we will define each permission in the format ",(0,g.jsx)(j.Z,{children:"ACTION_RESOURCENAME"})," corresponding to each APIs. For example, ",(0,g.jsx)(j.Z,{children:"PLAY_COURSE"})," permission can be used to grant the ability to access ",(0,g.jsx)("u",{children:"PlayCourse"})," API."]})]}),(0,g.jsxs)("section",{children:[(0,g.jsx)(h.aC,{children:"Key benefits of Permission-based access control"}),(0,g.jsx)(i.Z,{children:"Securing each API by defining its own permission and then granting those permissions to the roles offer some of the key benefits listed below:"}),(0,g.jsxs)("ol",{className:"ms-3",children:[(0,g.jsx)("li",{children:"No more code modification, as granting permissions to roles is database driven."}),(0,g.jsx)("li",{children:"Bird's eye view of who can do what in a single place i.e., database."}),(0,g.jsx)("li",{children:"Fine grained access control to each API (and other resources)."}),(0,g.jsx)("li",{children:"Same permission-based access model can be used by both API as well as user interface, as every user action in the UI corresponds to an API execution in the application."})]})]}),(0,g.jsx)("section",{children:(0,g.jsxs)(i.Z,{children:["First let's apply the permission based access control for ",(0,g.jsx)("u",{children:"PlayCourse"})," API. We will gradually build the concept in the next three chapters. And in the last chapter we will replace existing role-based access control using permissions."]})})]})},(0,e.s)(d.Z,"permission-based-authorization"))},4046:function(a){a.exports={heading:"Heading_heading__aP_DN",underline:"Heading_underline__sSwtx"}},9472:function(a){a.exports={mark:"Mark_mark__8gh_T"}}},function(a){a.O(0,[116,734,92,637,827,774,888,179],function(){var b;return a(a.s=2621)}),_N_E=a.O()}])